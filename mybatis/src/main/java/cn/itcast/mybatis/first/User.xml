<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="test">
	<!-- 主键查询，只返回一条 -->
	<!-- id标识映射文件中的sql，将sql语句封装到mappedStatement对象中，所以将id称为statement的id -->
	<!-- parameterType指定输入参数类型 -->
	<!-- resultType指定输结果所映射的java对象的类型 -->
	<!-- #{}标识一个占位符 #{id}其中的id标识接入输入参数，参数名就是id，如果参数是简单类型，#{}中的参数名可以任意，可以value或其他名称 -->
	<select id="findUserById" parameterType="int"
		resultType="cn.itcast.mybatis.pojo.User">
		SELECT * FROM USER WHERE id = #{value}
	</select>

	<!-- 模糊查询返回多条 -->
	<!-- ${}:表示拼接sql串，接收的参数内容不加任何修饰拼接到sql中 ，使用${}拼接sql语句，可能引起sql注入 -->
	<!-- like '%' or 1=1 or '%' -->
	<!-- ${value}来接收输入参数的内容，如果传入类型是简单类型，${}只能是value -->
	<select id="findUserByUsername" parameterType="String"
		resultType="cn.itcast.mybatis.pojo.User">
		SELECT * FROM USER WHERE username LIKE '%${value}%';
	</select>

	<!-- 添加用户将 parameterType:指定参数类型是pojo 在#{}中指定pojo的属性名称，接收到pojo对象的属性值，mybatis通过OGNL获取对象的属性值 -->
	<insert id="insertUser" parameterType="cn.itcast.mybatis.pojo.User">
		<!-- 将插入的主键返回到user对象中 SELECT LAST_INSERT_ID()得到insert进去记录的主键值，只适用自增主键 -->
		<!-- keyProperty:将查到主键值设置到parameterType指定的对象属性 -->
		<!-- resultType:返回值的类型 -->
		<!-- order：相对于insert的执行顺序 -->
		<selectKey keyProperty="id" resultType="int" order="AFTER">
			SELECT
			LAST_INSERT_ID()
		</selectKey>
		INSERT INTO
		USER(username,birthday,sex,address)
		VALUES(#{userName},#{birthday},#{sex},#{address})
	</insert>

	<!-- 删除用户 -->
	<delete id="deleteUser" parameterType="int">
		delete from user where id
		= #{id}
	</delete>
	
	<!-- 更新用户 -->
	<update id="updateUser" parameterType="cn.itcast.mybatis.pojo.User">
		update user set
		username=#{userName}, birthday = #{birthday}, sex=#{sex},
		address=#{address} where
		id=#{id}
	</update>
</mapper>
